---
- name: '[0_0] - Setting postgres database'
  hosts: database
  remote_user: ansible-adm
  become: yes
  gather_facts: yes
  vars_files:
    - ../../vars/main.yml
    - ../../vars/database_settings.yml
  tasks:
    #
    #
    - name: (deb) Install postgreSQL dependencies packages
      apt:
         name: "{{ db_deb_dependencies }}"
         update_cache: yes
         state: latest
      tags: package-dep
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    #
    #
    - name: (deb) Install postgreSQL packages
      apt:
         name: "{{ db_deb_packages }}"
         update_cache: yes
         state: present
      tags: install-postgres
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    #
    #
    - name: (rpm) Install postgreSQL dependencies packages
      yum:
         name: "{{ db_rpm_dependencies }}"
         update_cache: yes
         state: latest
      tags: package-dep
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    #
    #
    - name: (rpm) Install postgreSQL packages
      yum:
         name: "{{ db_rpm_packages }}"
         update_cache: yes
         state: present
      tags: install-postgres
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    #
    #
    - name: Start the databese service
      service:
         name: postgresql
         state: started
         enabled: yes
      tags: db-startservice

    - debug:
         msg: "{{ item.db_name }}"
      with_items:
        - "{{ db_mobiwan_user }}"
        - "{{ db_keycloak_user }}"

    - pause:
         seconds: 10
    #
    #
    - name: Ask postgres to the config file location
      become_user: postgres
      shell: |
         dirname $(psql -t -P format=unaligned -c 'show hba_file')
      register: postgresconfigpath

    #
    #
    - name: Allow other machine to connect to this server
      lineinfile:
         path: "{{ postgresconfigpath.stdout }}/pg_hba.conf"
         line: "host    all             all             0.0.0.0/0               md5"
         state: present
      when: db_allow_external_connexion

    #
    #
    - name: PostgreSQL listen address 0.0.0.0
      lineinfile:
         path: "{{ postgresconfigpath.stdout }}/postgresql.conf"
         regexp: "^#listen_addresses"
         line: "listen_addresses = '0.0.0.0'"
      when: db_listen_on_all_interfaces

    #
    #
    - name: Create postgreSQL database
      become_user: postgres
      postgresql_db:
         name: "{{ item['db_name'] }}"
         port: "{{ item['db_port'] }}"
         ssl_mode: prefer
         state: present
      tags: createdb
      with_items:
        - "{{ db_mobiwan_user }}"
        - "{{ db_keycloak_user }}"

    #
    #
    - name: Create database user
      become_user: postgres
      postgresql_user:
         db: "{{ item.db_name }}"
         name: "{{ item.db_username }}"
         password: "{{ item.db_password }}"
         expires: "{{ item.db_user_expire }}"
         role_attr_flags: "{{ item.db_role_attr }}"
         state: present
      tags: db-createuser
      with_items:
        - "{{ db_mobiwan_user }}"
        - "{{ db_keycloak_user }}"

    #
    #
    - name: Restart the databese service
      service:
         name: postgresql
         state: restarted
         enabled: yes
      tags: db-restartservice

#
# you can add tasks like this
#    - import_tasks: tasks/common/get_hostname.yml



